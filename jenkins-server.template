{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "Jenkins Server: This template creates a Jenkins Server for use with AWS Code Services. **WARNING** This template creates one or more Amazon EC2 instances. You will be billed for the AWS resources used if you create a stack from this template. Copyright [2015-2016] Amazon.com, Inc. or its affiliates. All Rights Reserved. Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with the License. A copy of the License is located at http://aws.amazon.com/apache2.0/ or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.",
    "Parameters"               : {
        "InstanceType" : {
            "Description" : "EC2 instance type for Jenkins Server",
            "Type"        : "String",
            "Default"     : "t2.micro",
            "AllowedValues" : [
                "t1.micro",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge"
            ],
            "ConstraintDescription" : "must be a valid EC2 instance type."
        },
        "KeyName"      : {
            "Description" : "The EC2 Key Pair to allow SSH access to EC2 instances",
            "Type"        : "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
        },
        "VpcId"        : {
            "Description" : "The VPC Id where the EC2 instances will be launched.",
            "Type"        : "AWS::EC2::VPC::Id",
            "ConstraintDescription" : "must be the name of an existing VPC."
        },
        "YourIPRange"  : {
            "Description" : "CIDR block of the network from where you will connect to the Jenkins server using HTTP and SSH",
            "Type"        : "String",
            "MinLength"   : "9",
            "MaxLength"   : "18",
            "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "VPCSubnet"    : {
            "Description" : "Select a subnet id for the Jenkins Server",
            "Type"        : "AWS::EC2::Subnet::Id"
        }
    },
    "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "PV64" : "ami-50842d38", "HVM64" : "ami-08842d60", "HVMG2" : "ami-3a329952"  },
      "us-west-2"      : { "PV64" : "ami-af86c69f", "HVM64" : "ami-8786c6b7", "HVMG2" : "ami-47296a77"  },
      "us-west-1"      : { "PV64" : "ami-c7a8a182", "HVM64" : "ami-cfa8a18a", "HVMG2" : "ami-331b1376"  },
      "eu-west-1"      : { "PV64" : "ami-aa8f28dd", "HVM64" : "ami-748e2903", "HVMG2" : "ami-00913777"  },
      "ap-southeast-1" : { "PV64" : "ami-20e1c572", "HVM64" : "ami-d6e1c584", "HVMG2" : "ami-fabe9aa8"  },
      "ap-northeast-1" : { "PV64" : "ami-21072820", "HVM64" : "ami-35072834", "HVMG2" : "ami-5dd1ff5c"  },
      "ap-southeast-2" : { "PV64" : "ami-8b4724b1", "HVM64" : "ami-fd4724c7", "HVMG2" : "ami-e98ae9d3"  },
      "sa-east-1"      : { "PV64" : "ami-9d6cc680", "HVM64" : "ami-956cc688", "HVMG2" : "NOT_SUPPORTED" },
      "cn-north-1"     : { "PV64" : "ami-a857c591", "HVM64" : "ami-ac57c595", "HVMG2" : "NOT_SUPPORTED" },
      "eu-central-1"   : { "PV64" : "ami-a03503bd", "HVM64" : "ami-b43503a9", "HVMG2" : "ami-b03503ad"  }
    }
  },
    "Resources"                : {
        "JenkinsServer" : {
            "Type" : "AWS::EC2::Instance",
            "Metadata" : {
                "Comment" : "Install Jenkins , git and nginx",
                "AWS::CloudFormation::Init" : {
                    "configSets" : {
                        "install_all" : [
                            "install_base",
                            "install_nginx"
                        ]
                    },
                    "install_base" : {
                        "packages" : {
                            "yum" : {
                                "git" : [
                                ]
                            }
                        }
                    },
                    "install_nginx" : {
                        "packages" : {
                            "yum" : {
                                "nginx" : [
                                ]
                            }
                        },
                        "files"    : {
                            "/etc/nginx/nginx.conf" : {
                                "content" : {
                                    "Fn::Join" : [
                                        "",
                                        [
                                            "user  nginx;\n",
                                            "worker_processes  1;\n\n",
                                            "error_log  /var/log/nginx/error.log;\n",
                                            "pid        /var/run/nginx.pid;\n\n",
                                            "events {\n",
                                            "    worker_connections  1024;\n",
                                            "}\n\n",
                                            "http {\n",
                                            "    include       /etc/nginx/mime.types;\n",
                                            "    default_type  application/octet-stream;\n",
                                            "    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n",
                                            "                      '$status $body_bytes_sent \"$http_referer\" '\n",
                                            "                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n",
                                            "    access_log  /var/log/nginx/access.log  main;\n",
                                            "    sendfile        on;\n",
                                            "    keepalive_timeout  65;\n",
                                            "    include /etc/nginx/conf.d/*.conf;\n",
                                            "    index   index.html index.htm;\n",
                                            "    server {\n",
                                            "        listen       80;\n",
                                            "        server_name  _;\n",
                                            "        location / {\n",
                                            "          proxy_pass              http://127.0.0.1:8080;\n",
                                            "          proxy_set_header        Host $host;\n",
                                            "          proxy_set_header        X-Real-IP $remote_addr;\n",
                                            "          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n",
                                            "          proxy_connect_timeout   150;\n",
                                            "          proxy_send_timeout      100;\n",
                                            "          proxy_read_timeout      100;\n",
                                            "          proxy_buffers           4 32k;\n",
                                            "          client_max_body_size    8m;\n",
                                            "          client_body_buffer_size 128k;\n",
                                            "        }\n",
                                            "   }\n",
                                            "}\n"
                                        ]
                                    ]
                                },
                                "mode"    : "000444",
                                "owner"   : "root",
                                "group"   : "root"
                            }
                        },
                        "services" : {
                            "sysvinit" : {
                                "nginx" : {
                                    "enabled" : "true",
                                    "ensureRunning" : "true",
                                    "files"         : [
                                        "/etc/nginx/nginx.conf"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties" : {
                "KeyName" : {
                    "Ref" : "KeyName"
                },
                "ImageId" : {
                    "Fn::FindInMap" : [
                        "AWSRegionArch2AMI",
                        {
                            "Ref" : "AWS::Region"
                        },
                        {
                            "Fn::FindInMap" : [
                                "AWSInstanceType2Arch",
                                {
                                    "Ref" : "InstanceType"
                                },
                                "Arch"
                            ]
                        }
                    ]
                },
                "NetworkInterfaces" : [
                    {
                        "AssociatePublicIpAddress" : "true",
                        "DeviceIndex"              : "0",
                        "GroupSet"                 : [
                            {
                                "Ref" : "JenkinsSecurityGroup"
                            }
                        ],
                        "SubnetId"                 : {
                            "Ref" : "VPCSubnet"
                        }
                    }
                ],
                "InstanceType"      : {
                    "Ref" : "InstanceType"
                },
                "IamInstanceProfile" : {
                    "Ref" : "JenkinsInstanceProfile"
                },
                "UserData"           : {
                    "Fn::Base64" : {
                        "Fn::Join" : [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "yum update -y aws-cfn-bootstrap\n",
                                "/opt/aws/bin/cfn-init -v ",
                                " --stack ",
                                {
                                    "Ref" : "AWS::StackName"
                                },
                                " --resource JenkinsServer ",
                                " --configsets install_all ",
                                " --region ",
                                {
                                    "Ref" : "AWS::Region"
                                },
                                "\n",
                                "# Install Jenkins\n",
				"wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2F%www.oracle.com%2F; oraclelicense=accept-securebackup-cookie;\" \"http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.rpm\"\n",
				"rpm -i jdk-8u131-linux-x64.rpm\n",				
                                "wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat/jenkins.repo\n",
                                "rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key\n",
                                "yum install -y jenkins\n",
                                "service jenkins start\n",
                                "chkconfig jenkins on\n",
                                "# Update the AWS CLI to the latest version\n",
                                "yum update -y aws-cli\n",
                                "# Wait 30 seconds to allow Jenkins to startup\n",
                                "echo \"Waiting 30 seconds for Jenkins to start.....\"\n",
                                "sleep 30\n",
				
                                "# Install the required plugins\n",
                                "cd /var/lib/jenkins/plugins\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/multiple-scms.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/github-api.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/scm-api.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/git-client.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/github.hpi\n",
                                "curl -O -L https://updates.jenkins-ci.org/latest/git.hpi\n",
                                "chown jenkins:jenkins *.hpi\n",
                                "# Restarting Jenkins\n",
                                "service jenkins restart\n"
                            ]
                        ]
                    }
                },
                "Tags"               : [
                    {
                        "Key" : "Name",
                        "Value" : "Jenkins Server"
                    }
                ]
            }
        },
        "JenkinsSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable SSH and HTTP access from specific CIDR block",
                "VpcId"            : {
                    "Ref" : "VpcId"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "22",
                        "ToPort"     : "22",
                        "CidrIp"     : {
                            "Ref" : "YourIPRange"
                        }
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "80",
                        "ToPort"     : "80",
                        "CidrIp"     : {
                            "Ref" : "YourIPRange"
                        }
                    }
                ]
            }
        },
        "JenkinsRole"          : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "Path" : "/",
                "ManagedPolicyArns" : [
                    "arn:aws:iam::aws:policy/AWSCodePipelineCustomActionAccess"
                ],
                "AssumeRolePolicyDocument" : {
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Principal" : {
                                "Service" : [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action"    : [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                }
            }
        },
        "JenkinsInstanceProfile" : {
            "Type" : "AWS::IAM::InstanceProfile",
            "Properties" : {
                "Path" : "/",
                "Roles" : [
                    {
                        "Ref" : "JenkinsRole"
                    }
                ]
            }
        }
    },
    "Outputs"                  : {
        "JenkinsServerDNSName" : {
            "Description" : "DNS Name of Jenkins Server",
            "Value"       : {
                "Fn::GetAtt" : [
                    "JenkinsServer",
                    "PublicDnsName"
                ]
            }
        }
    }
}
